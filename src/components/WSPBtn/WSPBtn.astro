---
// WhatsAppFloat.astro
interface Props {
  phoneNumber?: string;
  welcomeMessage?: string;
  companyName?: string;
  //availability?: string;
}

const {
  phoneNumber = "",
  welcomeMessage = "",
  companyName = "",
  //availability = "sdfsdfsdf",
} = Astro.props;
---

<div class="fixed bottom-6 right-6 z-50" id="whatsapp-float">
  <!-- Chat Modal -->
  <div
    class="mb-4 w-72 rounded-2xl bg-white shadow-2xl transform transition-all duration-300 scale-100 opacity-100 hidden"
    id="chat-modal"
  >
    <!-- Header -->
    <div class="bg-green-500 p-4 rounded-t-2xl">
      <div class="flex justify-between items-center">
        <div class="text-white">
          <h3 class="font-semibold">{companyName}</h3>
          <!-- <p class="text-xs opacity-90">{availability}</p> -->
        </div>
        <button
          id="close-chat"
          class="text-white hover:bg-green-600 rounded-full p-1 transition-colors duration-300"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Welcome Message -->
    <div class="p-4 bg-gray-50">
      <div class="bg-white rounded-lg p-3 shadow-sm">
        <p class="text-black font-semibold">{welcomeMessage}</p>
      </div>
    </div>

    <!-- Message Input -->
    <form id="message-form" class="p-4 border-t">
      <div class="flex gap-2">
        <input
          type="text"
          id="message-input"
          placeholder="Escribe tu mensaje..."
          class="flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
        />
        <button
          type="submit"
          class="bg-green-500 text-white p-2 rounded-lg hover:bg-green-600 transition-colors duration-300"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="m22 2-7 20-4-9-9-4Z"></path>
            <path d="M22 2 11 13"></path>
          </svg>
        </button>
      </div>
    </form>
  </div>

  <!-- Floating Button -->
  <div class="relative">
    <!-- Direct Call Button -->
    <button
      id="call-button"
      class="absolute bottom-16 right-2 bg-green-500 text-white p-3 rounded-full shadow-lg hover:bg-green-600 transition-all duration-300 animate-fade-in-up hidden"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path
          d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
        ></path>
      </svg>
    </button>

    <!-- Main WhatsApp Button -->
    <button
      id="whatsapp-button"
      class="bg-green-500 text-white p-4 rounded-full shadow-lg hover:bg-green-600 transition-all duration-300 flex items-center justify-center group"
    >
      <div class="relative">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path
            d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"
          ></path>
        </svg>
        <span
          id="notification-badge"
          class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center animate-bounce"
        >
          1
        </span>
      </div>
    </button>
  </div>
</div>

<script define:vars={{ phoneNumber }}>
  // Elements
  const whatsappFloat = document.getElementById("whatsapp-float");
  const chatModal = document.getElementById("chat-modal");
  const closeChat = document.getElementById("close-chat");
  const messageForm = document.getElementById("message-form");
  const messageInput = document.getElementById("message-input");
  const whatsappButton = document.getElementById("whatsapp-button");
  const callButton = document.getElementById("call-button");
  const notificationBadge = document.getElementById("notification-badge");

  let isOpen = false;

  // Toggle chat
  whatsappButton.addEventListener("click", () => {
    isOpen = !isOpen;
    chatModal.classList.toggle("hidden");
    if (isOpen) {
      notificationBadge.classList.add("hidden");
    }
  });

  // Close chat
  closeChat.addEventListener("click", () => {
    isOpen = false;
    chatModal.classList.add("hidden");
  });

  // Handle message submit
  messageForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const message = messageInput.value;
    const encodedMessage = encodeURIComponent(message);
    window.open(
      `https://wa.me/${phoneNumber}?text=${encodedMessage}`,
      "_blank"
    );
    messageInput.value = "";
    isOpen = false;
    chatModal.classList.add("hidden");
  });

  // Handle hover states
  whatsappButton.addEventListener("mouseenter", () => {
    if (!isOpen) {
      callButton.classList.remove("hidden");
    }
  });

  whatsappButton.addEventListener("mouseleave", () => {
    setTimeout(() => {
      if (!callButton.matches(":hover")) {
        callButton.classList.add("hidden");
      }
    }, 100);
  });

  callButton.addEventListener("mouseleave", () => {
    callButton.classList.add("hidden");
  });

  // Handle phone call
  callButton.addEventListener("click", () => {
    window.open(`tel:${phoneNumber}`, "_blank");
  });
</script>

<style>
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.3s ease-out;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: none;
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  .animate-bounce {
    animation: bounce 1s infinite;
  }
</style>
